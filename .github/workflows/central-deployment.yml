name: "Build - Test - Deploy"
on:
  push:
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
env:
  buildConfiguration: Release
  buildPlatform: Any CPU
  solution: "PartsUnlimited-aspnet45/PartsUnlimited.sln"
jobs:
  build:
    name: build & test ðŸš§
    runs-on: windows-2019
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }}
    - name: install msbuild
      uses: microsoft/setup-msbuild@v1.0.2
    - name: run msbuild
      run: msbuild ${{ env.solution }} /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="${{ runner.temp }}" -p:Configuration=${{ env.buildConfiguration }} -p:Platform="${{ env.buildPlatform }}" -m
    - uses: Microsoft/vstest-action@v1
      with:
        testAssembly: |-
          **\*test*.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: "${{ github.workspace }}"
        platform: "${{ env.buildPlatform }}"
        runInParallel: true
    - name: Copy Files
      uses: actions/github-script@v3
      env:
        TARGET_FOLDER: "${{ runner.temp }}"
        SOURCE_FOLDER: "${{ github.workspace }}"
        CLEAN_TARGET_FOLDER: false
        FLATTEN_FOLDERS: false
        OVERWRITE: false
        CONTENTS: "**/*.json"
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const target = path.resolve(process.env.TARGET_FOLDER)
          process.chdir(process.env.SOURCE_FOLDER || '.')
          if (process.env.CLEAN_TARGET_FOLDER === 'true') await io.rmRF(target)
          const flattenFolders = process.env.FLATTEN_FOLDERS === 'true'
          const options = {force: process.env.OVERWRITE === 'true'}
          const globber = await glob.create(process.env.CONTENTS || '**')
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            const filename = flattenFolders ? path.basename(file) : file.substring(process.cwd().length)
            const dest = path.join(target, filename)
            await io.mkdirP(path.dirname(dest))
            await io.cp(file, dest, options)
          }
    - name: Test Report
      env:
        TEST_RESULTS_FOLDER: "${{ runner.temp }}/VSTest_resultsfolder"
      uses: phoenix-actions/test-reporting@v9
      id: test-report 
      if: success() || failure()  
      with:
        name: .Net Tests            
        path: '${{ env.TEST_RESULTS_FOLDER }}/*.trx'
        reporter: dotnet-trx
        path-replace-backslashes: 'true'
        output-to: 'step-summary'
    - name: Upload Build binaries
      uses: actions/upload-artifact@v2
      with:
        name: BuildResultsFile
        path: "${{ runner.temp }}"
  release:
    name: release ðŸš¢
    needs:
    - build
    if: github.ref == 'refs/heads/master' && github.event_type != 'pull_request'
    uses: ./.github/workflows/release-workflow.yml
    secrets:
      inherit
