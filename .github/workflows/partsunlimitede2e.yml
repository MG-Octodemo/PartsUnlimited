name: PartsUnlimited/PartsUnlimitedE2E
on:
  workflow_call
  
permissions:
      id-token: write
      contents: read
      
env:
  HostingPlan: pule2e
  LAWSId: c808e1ad-2a5b-47e6-8f74-0ecf9911250d
  ResourceGroupName: ASPDOTNET
  ServerName: pule2e87ed314e
  TreatAsPassed: Verify,Manual
jobs:
  Test:
    runs-on: windows-latest
    steps:
    - name: print Client ID
      run: echo ${{ secrets.AZURE_CLIENT_ID }}
    - name: print Tenant ID
      run: echo ${{ secrets.AZURE_TENANT_ID }}
    - name: print sub ID
      run: echo ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  Dev:
    runs-on: windows-latest
    env:
      WebsiteName: pule2e87ed314e
    if: github.event_type != 'pull_request'
    steps:
    - name: Azure Deployment
      uses: Azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Azure Deployment
      run: |-
        az group create --location "East US 2" --name "${{ env.ResourceGroupName }}" --subscription ""
        az deployment group create --resource-group "${{ env.ResourceGroupName }}" --no-prompt true --mode "Incremental" --template-file "${{ github.workspace }}/PartsUnlimitedE2E/drop/PartsUnlimited-aspnet45/env/PartsUnlimitedEnv/Templates/FullEnvironmentSetupMerged.json" --parameters "${{ github.workspace }}/PartsUnlimitedE2E/drop/PartsUnlimited-aspnet45/env/PartsUnlimitedEnv/Templates/FullEnvironmentSetupMerged.param.json" --parameters WebsiteName=${{ env.WebsiteName }} PUL_ServerName=${{ env.ServerName }} PUL_HostingPlanName=${{ env.HostingPlan }}
        az webapp deploy --resource-group "${{ env.ResourceGroupName }}" --name "${{ env.WebsiteName }}" --slot Dev --src-path "${{ github.workspace }}/PartsUnlimitedE2E/drop/PartsUnlimitedWebsite.zip"
  QA:
    needs:
    - Dev
    runs-on: windows-latest
    environment:
      name: QA
    env:
      WebsiteName: pule2e87ed314e
    if: github.event_type != 'pull_request'
    steps:
    - name: Azure Deployment
      uses: Azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Azure Deployment
      run: |-
        az webapp deploy --resource-group "${{ env.ResourceGroupName }}" --name "${{ env.WebsiteName }}" --slot Staging --src-path "${{ github.workspace }}/PartsUnlimitedE2E/drop/PartsUnlimitedWebsite.zip"
  Production:
    needs:
    - QA
    runs-on: windows-latest
    env:
      WebsiteName: pule2e87ed314e
    if: github.event_type != 'pull_request'
    steps:
    - name: Azure Deployment
      uses: Azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Azure Deployment
      run: |-
        az webapp deploy --resource-group "${{ env.ResourceGroupName }}" --name "${{ env.WebsiteName }}" --src-path "${{ github.workspace }}/PartsUnlimitedE2E/drop/PartsUnlimitedWebsite.zip"
