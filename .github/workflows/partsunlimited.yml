name: PartsUnlimited/PartsUnlimited
on:
  push
env:
  buildConfiguration: Release
  buildPlatform: Any CPU
  solution: "**/*.sln"
jobs:
  build:
    runs-on: windows-2019
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }} -verbosity detail
    - name: install msbuild
      uses: microsoft/setup-msbuild@v1.0.2
    - name: run msbuild
      run: msbuild ${{ env.solution }} /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="${{ runner.temp }}" -p:Configuration=${{ env.buildConfiguration }} -p:Platform="${{ env.buildPlatform }}"
    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1
    - name: Install Dependencies for VSTest
      shell: pwsh
      run: |-
        Set-PSRepository PSGallery -InstallationPolicy Trusted
        Install-Module VstsTaskSdk -AllowClobber
    - name: Executing VSTest
      env:
        SEARCH_FOLDER: "${{ github.workspace }}"
        TEST_RESULTS_FOLDER: "${{ runner.temp }}/${{ github.run_id }}_resultsfolder"
        PATTERN: "**\\*test*.dll;!**\\*TestAdapter.dll;!**\\obj\\**"
        ARGS: "/Logger:trx"
      shell: pwsh
      run: |-
        Import-Module -Name VstsTaskSdk
        $SearchPattern = $env:PATTERN.Split(';').Trim()
        Write-Host "Search Pattern: " $SearchPattern
        Write-Host "Finding files for VSTest to execute.."
        $files = Find-VstsMatch -DefaultRoot $env:SEARCH_FOLDER -Pattern $SearchPattern
        Write-Host "Files found:" $files
        $exe = "vstest.console.exe"
        $args = $env:ARGS.Split(';').Trim()
        Write-Host "Arguments are: " $args
        & $exe $files /ResultsDirectory:$env:TEST_RESULTS_FOLDER $args
    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: TestResultsFile
        path: "${{ runner.temp }}/${{ github.run_id }}_resultsfolder"
