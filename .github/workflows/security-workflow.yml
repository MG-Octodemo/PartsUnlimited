# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "Security Scan - CodeQL"

on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  schedule:
    - cron: '18 2 * * 1'
env:
  buildConfiguration: Release
  buildPlatform: Any CPU
  solution: "PartsUnlimited-aspnet45/PartsUnlimited.sln"
  
jobs:
  analyze:
    name: SAST Analysis
    runs-on: windows-2019
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }}
    - name: install msbuild
      uses: microsoft/setup-msbuild@v1.0.2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        queries: security-and-quality

    # Autobuild attempts to build any compiled languages, but you can substitute this step with the specific build process applicable to your application
    - name: run msbuild
      run: msbuild ${{ env.solution }} /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="${{ runner.temp }}" -p:Configuration=${{ env.buildConfiguration }} -p:Platform="${{ env.buildPlatform }}"

    # Last step in this configuration is to perform the CodeQL Analysis. CodeQL analyzes your application's compilation process and creates a data flow chart that allows to discover vulnerabilities with a very low false positives rate
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
