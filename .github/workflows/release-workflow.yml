name: "Reusable Release"
on:
  workflow_call:
permissions:
      id-token: write
      contents: read
env:
  HostingPlan: pule2e
  ResourceGroupName: ASPDOTNET
  ServerName: pule2e87ed314e
  TreatAsPassed: Verify,Manual
jobs:
  Dev:
    runs-on: Windows-Runner16
    env:
      WebsiteName: pule2e87ed314e
    if: github.event_type != 'pull_request'
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Azure Deployment
      uses: Azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: actions/download-artifact@v3
      with:
        name: TestResultsFile
        path: "${{ runner.temp }}"
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: "${{ runner.temp }}"
    - name: Azure Deployment
      run: |-
        az group create --location "East US 2" --name "${{ env.ResourceGroupName }}" --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        az deployment group create --resource-group "${{ env.ResourceGroupName }}" --no-prompt true --mode "Incremental" --template-file "${{ runner.temp }}/PartsUnlimited-aspnet45/env/PartsUnlimitedEnv/Templates/FullEnvironmentSetupMerged.json" --parameters "${{ runner.temp }}/PartsUnlimited-aspnet45/env/PartsUnlimitedEnv/Templates/FullEnvironmentSetupMerged.param.json" --parameters WebsiteName=${{ env.WebsiteName }} PUL_ServerName=${{ env.ServerName }} PUL_HostingPlanName=${{ env.HostingPlan }}
        $publishProfile = az webapp deployment list-publishing-profiles --resource-group "${{ env.ResourceGroupName }}" --name "${{ env.WebsiteName }}" --query "[?publishMethod=='MSDeploy']" | ConvertFrom-Json
        "C:\Program Files\IIS\Microsoft Web Deploy V3\msdeploy.exe" -verb:sync -source:dirPath="${{ runner.temp }}/PartsUnlimitedWebsite.zip",includeAcls=false -dest:dirpath=D:\home\site\wwwroot,ComputerName="https://${{ env.WebsiteName }}.scm.azurewebsites.net/msdeploy.axd?site=$(${{ env.WebsiteName }})",UserName=$($publishProfile.userName),Password=$($publishProfile.userPWD),AuthType='Basic' -verbose -debug
  QA:
    needs:
    - Dev
    runs-on: Windows-Runner16
    environment:
      name: QA
    env:
      WebsiteName: pule2e87ed314e
    if: github.event_type != 'pull_request'
    steps:
    - name: Azure Deployment
      uses: Azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: actions/download-artifact@v3
      with:
        name: TestResultsFile
        path: "${{ runner.temp }}"
    - name: Azure Deployment
      run: |-
        az webapp deploy --resource-group "${{ env.ResourceGroupName }}" --name "${{ env.WebsiteName }}" --slot Staging --src-path "${{ runner.temp }}/PartsUnlimitedWebsite.zip"
  Production:
    needs:
    - QA
    runs-on: Windows-Runner16
    env:
      WebsiteName: pule2e87ed314e
    if: github.event_type != 'pull_request'
    steps:
    - name: Azure Deployment
      uses: Azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: actions/download-artifact@v3
      with:
        name: TestResultsFile
        path: "${{ runner.temp }}"
    - name: Azure Deployment
      run: |-
        az webapp deploy --resource-group "${{ env.ResourceGroupName }}" --name "${{ env.WebsiteName }}" --src-path "${{ runner.temp }}/PartsUnlimitedWebsite.zip"
